<?xml version="1.0" encoding="utf-8"?>
<TestRun id="0abd548c-4d3c-4c51-8689-f281dd041958" name="smadhavi@CHQ-MICROKNOT15 2022-03-08 01:15:25" runUser="CORP\smadhavi" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2022-03-08T01:15:25.6338605-07:00" queuing="2022-03-08T01:15:25.6338610-07:00" start="2022-03-08T01:15:20.3672168-07:00" finish="2022-03-08T01:15:25.6882233-07:00" />
  <TestSettings name="default" id="28d0afd7-d603-4e89-bcfa-30d5bcd3db5e">
    <Deployment runDeploymentRoot="smadhavi_CHQ-MICROKNOT15_2022-03-08_01_15_25" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="a343b39c-c48c-4ce6-b82d-88230523193d" testId="d67f7c51-774e-4b16-b962-be8c976348a3" testName="AddTwoNumbers" computerName="CHQ-MICROKNOT15" duration="00:00:00.0659903" startTime="2022-03-08T01:15:23.4882344-07:00" endTime="2022-03-08T01:15:24.4814375-07:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a343b39c-c48c-4ce6-b82d-88230523193d">
      <Output>
        <StdOut>-&gt; Loading plugin C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\LivingDoc.SpecFlowPlugin.dll&#xD;
-&gt; Loading plugin C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\TechTalk.SpecFlow.MSTest.SpecFlowPlugin.dll&#xD;
-&gt; Loading plugin C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\SpecFlowCalucator.dll&#xD;
-&gt; Using default config&#xD;
Given the first number is 50&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(50) (0.0s)&#xD;
And the second number is 70&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(70) (0.0s)&#xD;
When the two numbers are added&#xD;
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreAdded() (0.0s)&#xD;
Then the result should be 120&#xD;
-&gt; done: CalculatorStepDefinitions.ThenTheResultShouldBe(120) (0.0s)&#xD;
&#xD;


TestContext Messages:
Given the first number is 50&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(50) (0.0s)&#xD;
And the second number is 70&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(70) (0.0s)&#xD;
When the two numbers are added&#xD;
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreAdded() (0.0s)&#xD;
Then the result should be 120&#xD;
-&gt; done: CalculatorStepDefinitions.ThenTheResultShouldBe(120) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cfebbdd8-82b8-4da1-b4da-5287db212a34" testId="c007e412-b76b-4f50-8874-014ad0256caa" testName="DividedByTwoNumbers" computerName="CHQ-MICROKNOT15" duration="00:00:00.2970599" startTime="2022-03-08T01:15:24.5028847-07:00" endTime="2022-03-08T01:15:24.8004363-07:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cfebbdd8-82b8-4da1-b4da-5287db212a34">
      <Output>
        <StdOut>Given the first number is 60&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(60) (0.0s)&#xD;
And the second number is 10&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(10) (0.0s)&#xD;
When the two numbers are divided&#xD;
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreDivided() (0.0s)&#xD;
Then the result should be 7&#xD;
-&gt; error: Assert.AreEqual failed. Expected:&lt;7&gt;. Actual:&lt;6&gt;.  (0.3s)&#xD;
&#xD;


TestContext Messages:
Given the first number is 60&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(60) (0.0s)&#xD;
And the second number is 10&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(10) (0.0s)&#xD;
When the two numbers are divided&#xD;
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreDivided() (0.0s)&#xD;
Then the result should be 7&#xD;
-&gt; error: Assert.AreEqual failed. Expected:&lt;7&gt;. Actual:&lt;6&gt;.  (0.3s)</StdOut>
        <ErrorInfo>
          <Message>Assert.AreEqual failed. Expected:&lt;7&gt;. Actual:&lt;6&gt;. </Message>
          <StackTrace>   at SpecFlowCalucator.Steps.CalculatorStepDefinitions.ThenTheResultShouldBe(Int32 value) in C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\Steps\CalculatorStepDefinitions.cs:line 61&#xD;
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)&#xD;
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan&amp; duration)&#xD;
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)&#xD;
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()&#xD;
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()&#xD;
   at SpecFlowCalucator.Features.CalculatorFeature.ScenarioCleanup()&#xD;
   at SpecFlowCalucator.Features.CalculatorFeature.DividedByTwoNumbers() in C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\Features\Calculator.feature:line 27&#xD;
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1ace4710-eaec-448a-a9e1-559b2299e6a2" testId="4804fed4-99d8-4c06-8864-76863fac09a6" testName="SubTwoNumbers" computerName="CHQ-MICROKNOT15" duration="00:00:00.0022601" startTime="2022-03-08T01:15:24.5001487-07:00" endTime="2022-03-08T01:15:24.5026670-07:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1ace4710-eaec-448a-a9e1-559b2299e6a2">
      <Output>
        <StdOut>Given the first number is 70&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(70) (0.0s)&#xD;
And the second number is 50&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(50) (0.0s)&#xD;
When the two numbers are Subtracted&#xD;
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreSubtracted() (0.0s)&#xD;
Then the result should be 20&#xD;
-&gt; done: CalculatorStepDefinitions.ThenTheResultShouldBe(20) (0.0s)&#xD;
&#xD;


TestContext Messages:
Given the first number is 70&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheFirstNumberIs(70) (0.0s)&#xD;
And the second number is 50&#xD;
-&gt; done: CalculatorStepDefinitions.GivenTheSecondNumberIs(50) (0.0s)&#xD;
When the two numbers are Subtracted&#xD;
-&gt; done: CalculatorStepDefinitions.WhenTheTwoNumbersAreSubtracted() (0.0s)&#xD;
Then the result should be 20&#xD;
-&gt; done: CalculatorStepDefinitions.ThenTheResultShouldBe(20) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="AddTwoNumbers" storage="c:\users\smadhavi\source\repos\specflowcalucator\specflowcalucator\bin\debug\net5.0\specflowcalucator.dll" id="d67f7c51-774e-4b16-b962-be8c976348a3">
      <TestCategory>
        <TestCategoryItem TestCategory="SumOFTwoNumbers" />
      </TestCategory>
      <Execution id="a343b39c-c48c-4ce6-b82d-88230523193d" />
      <TestMethod codeBase="C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\SpecFlowCalucator.dll" adapterTypeName="executor://mstestadapter/v2" className="SpecFlowCalucator.Features.CalculatorFeature" name="AddTwoNumbers" />
    </UnitTest>
    <UnitTest name="DividedByTwoNumbers" storage="c:\users\smadhavi\source\repos\specflowcalucator\specflowcalucator\bin\debug\net5.0\specflowcalucator.dll" id="c007e412-b76b-4f50-8874-014ad0256caa">
      <TestCategory>
        <TestCategoryItem TestCategory="DivisionOfTwoNumbers" />
      </TestCategory>
      <Execution id="cfebbdd8-82b8-4da1-b4da-5287db212a34" />
      <TestMethod codeBase="C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\SpecFlowCalucator.dll" adapterTypeName="executor://mstestadapter/v2" className="SpecFlowCalucator.Features.CalculatorFeature" name="DividedByTwoNumbers" />
    </UnitTest>
    <UnitTest name="SubTwoNumbers" storage="c:\users\smadhavi\source\repos\specflowcalucator\specflowcalucator\bin\debug\net5.0\specflowcalucator.dll" id="4804fed4-99d8-4c06-8864-76863fac09a6">
      <TestCategory>
        <TestCategoryItem TestCategory="SubmissionFTwoNumbers" />
      </TestCategory>
      <Execution id="1ace4710-eaec-448a-a9e1-559b2299e6a2" />
      <TestMethod codeBase="C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\SpecFlowCalucator.dll" adapterTypeName="executor://mstestadapter/v2" className="SpecFlowCalucator.Features.CalculatorFeature" name="SubTwoNumbers" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="d67f7c51-774e-4b16-b962-be8c976348a3" executionId="a343b39c-c48c-4ce6-b82d-88230523193d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c007e412-b76b-4f50-8874-014ad0256caa" executionId="cfebbdd8-82b8-4da1-b4da-5287db212a34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4804fed4-99d8-4c06-8864-76863fac09a6" executionId="1ace4710-eaec-448a-a9e1-559b2299e6a2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="3" executed="3" passed="2" failed="1" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>MSTest Executor: Test Parallelization enabled for C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\SpecFlowCalucator.dll (Workers: 2, Scope: ClassLevel).&#xD;
-&gt; LivingDocPlugin: Output generated in: C:\Users\smadhavi\source\repos\SpecFlowCalucator\SpecFlowCalucator\bin\Debug\net5.0\TestExecution.json&#xD;
&#xD;
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>